/*
 * Morgan Stanley makes this available to you under the Apache License, Version 2.0 (the "License").
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * See the NOTICE file distributed with this work for additional information regarding copyright ownership.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package optimus.core;

import java.util.Objects;

// This interface is used by WeakInterner.
// The motivation is to have an interner that allows custom equals/hashcode implementation for
// interning purposes that are distinct from Object equals/hashcode
public interface InternerHashEquals {
  int internerHashCode();

  boolean internerEquals(Object other);

  // used by bytecode generated by SlottedBufferClassGenerator
  static boolean equals(Object o1, Object o2) {
    if (o1 instanceof InternerHashEquals custom) return custom.internerEquals(o2);
    if (o2 instanceof InternerHashEquals custom) return custom.internerEquals(o1);
    return Objects.equals(o1, o2);
  }

  static int hashOf(Object o) {
    if (o instanceof InternerHashEquals custom) return custom.internerHashCode();
    return o.hashCode();
  }

  // used by bytecode generated by SlottedBufferClassGenerator
  static int hashOf(int acc, Object o) {
    return acc * 31 + hashOf(o);
  }
}
